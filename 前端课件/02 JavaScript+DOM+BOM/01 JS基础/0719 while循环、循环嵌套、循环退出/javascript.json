{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Print to console.log": {
		"prefix": "lg",
		"body": ["console.log($1);"],
		"description": "Log output to console.log"
	},
	"Print to console.dir": {
		"prefix": "ld",
		"body": ["console.dir($1);"],
		"description": "Log output to console.dir"
	},
	"Print to setTimeout": {
		"prefix": "st",
		"body": ["setTimeout(() => {", "\t$1", "}, 1000);"],
		"description": "Log output to setTimeout"
	},
	"Print to setInterval": {
		"prefix": "si",
		"body": ["setInterval(() => {", "\t$1", "}, 1000);"],
		"description": "Log output to setInterval"
	},

	"for基础结构i": {
		"prefix": "gofi",
		"body": ["for(var i = 0; i < $1; i++){", "\t$2", "}"],
		"description": "for基础结构i"
	},

	"for基础结构j": {
		"prefix": "gofj",
		"body": ["for(var j = 0; j < $1; j++){", "\t$2", "}"],
		"description": "for基础结构j"
	},

	"for基础结构k": {
		"prefix": "gofk",
		"body": ["for(var k = 0; k < $1; k++){", "\t$2", "}"],
		"description": "for基础结构k"
	},

	"Vue2.x组件": {
		"prefix": "goc2",
		"body": [
			"Vue.component('$1', {",
			// "\tname: '$1',",
			"\ttemplate: '#$1',",
			"\tdata(){",
			"\t\treturn{",
			"\t\t\t$2",
			"\t\t}",
			"\t},",
			"});"
		],
		"description": "简单vue组件模板"
	},
	"Vue3.x组件": {
		"prefix": "goc3",
		"body": [
			"app.component('$1', {",
			// "\tname: '$1',",
			"\ttemplate: '#$1',",
			"\tdata(){",
			"\t\treturn{",
			"\t\t\t",
			"\t\t}",
			"\t},",
			"});"
		],
		"description": "简单vue组件模板"
	},

	"Vue3.x实例": {
		"prefix": "gov3",
		"body": ["const app = Vue.createApp({", "\tdata(){", "\t\treturn {", "\t\t\t", "\t\t}", "\t},", "});", "app.mount('#app');"],
		"description": "Vue模板结构"
	}
}
